{

  /*
   * ENVIRONMENTS
   * =================
   */

  // Define globals exposed by modern browsers.
  "browser": true,

  // Define globals exposed by jQuery.
  "jquery": true,

  // Define globals exposed by Node.js.
  "node": true,

  // Development/debugging (alert, confirm, etc)
  "devel": true,

  // Browserify (node.js code in the browser)
  "browserify": true,

  // Custom Globals
  "globals": {
    "define": false
  },

  /*
   * ENFORCING OPTIONS
   * =================
   */

  // prevent use of "evil" functions
  "evil": false,

  // Prohibit use of explicitly undeclared variables.
  "undef": true,


  // Force all variable names to use either camelCase style or UPPER_CASE
  // with underscores.
  "camelcase": true,

  // Warn when variables are defined but never used.
  "unused": true,

  // Require capitalized names for constructor functions.
  "newcap": true,

  // Enforce use of single quotation marks for strings.
  "quotmark": "single",

  // Enforce placing 'use strict' at the top function scope
  "strict": true,

  // Require immediate invocations to be wrapped in parens e.g. `(function () { } ());`
  "immed": true,

  // Prohibit use of == and != in favor of === and !==.
  "eqeqeq": true,

  // Enforce tab width of 2 spaces.
  "indent": 2,

  // Prohibit use of a variable before it is defined.
  "latedef": true,

  // Enforce line length to 80 characters
  "maxlen": false,

  /*
   * CODE COMPLEXITY (ENFORCING)
   * Adjust this until comfortable
   * =============================
   */

  // {int} Max number of formal params allowed per function
  "maxparams": 5,

  // {int} Max depth of nested blocks (within functions)
  "maxdepth": 5,

  // {int} Max number statements per function
  "maxstatements": 25,

  // {int} Max cyclomatic complexity per function
  "maxcomplexity": 6,

  /*
   * RELAXING OPTIONS
   * =================
   */

  // Suppress warnings about == null comparisons.
  "eqnull": true
}